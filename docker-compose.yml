version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: silent-watcher-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Persistent data storage
      - ./backend/data:/app/data
      # Optional: Custom configuration
      - ./backend/config:/app/config:ro
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - TZ=UTC
    networks:
      - silent-watcher-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: silent-watcher-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3000
    networks:
      - silent-watcher-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: silent-watcher-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - silent-watcher-network

networks:
  silent-watcher-network:
    driver: bridge

volumes:
  node_modules:
  data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backend/data
